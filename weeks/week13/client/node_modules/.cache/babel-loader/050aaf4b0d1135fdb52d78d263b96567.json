{"ast":null,"code":"var _jsxFileName = \"/home/gaetano/Desktop/Projects/Web_Application/weeks/week13/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Col, Alert } from 'react-bootstrap'; //import dayjs from 'dayjs';\n\nimport { ExamScores } from './ExamScores';\nimport ExamForm from './ExamForm';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport API from './API';\n/*\nconst fakeExams = [\n  { code: '01TYMOV', name: 'Information systems security', score: 30, date: dayjs('2022-02-01') },\n  { code: '01SQJOV', name: 'Data Science and Database Technology', score: 21, date: dayjs('2021-06-15') },\n  { code: '04GSPOV', name: 'Software Engineering', score: 26, date: dayjs('2022-06-04') }\n];\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(App2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction App2() {\n  _s();\n\n  const [exams, setExams] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [dirty, setDirty] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    API.getAllCourses().then(courses => {\n      setCourses(courses);\n      setDirty(true);\n    }).catch(err => handleError(err));\n  }, []);\n  useEffect(() => {\n    // fetch  /api/exams\n    // setExams del risultato\n    if (courses.length && dirty) {\n      API.getAllExams().then(exams => {\n        setExams(exams);\n        setDirty(false);\n        setInitialLoading(false);\n      }).catch(err => console.log(err));\n    }\n  }, [courses.length, dirty]);\n\n  function handleError(err) {\n    console.log(err);\n  }\n\n  function deleteExam(code) {\n    // setExams(...)   // remove exam\n    //setExams( exams.filter( (e)=> e.code !== code ) );\n    setExams(exams => exams.map(e => e.code === code ? { ...e,\n      status: 'deleted'\n    } : e));\n    API.deleteExam(code).then(() => setDirty(true)).catch(err => handleError(err));\n  }\n\n  function addExam(exam) {\n    exam.status = 'added';\n    setExams(oldExams => [...oldExams, exam]);\n    API.addExam(exam).then(() => setDirty(true)).catch(err => handleError(err));\n  }\n\n  function updateExam(exam) {\n    setExams(exams => exams.map(e => e.code === exam.code ? Object.assign({}, exam, {\n      status: 'updated'\n    }) : e));\n    API.updateExam(exam).then(() => setDirty(true)).catch(err => handleError(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: initialLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(ExamScores, {\n          exams: exams,\n          deleteExam: deleteExam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add\",\n        element: /*#__PURE__*/_jsxDEV(ExamForm, {\n          exams: exams,\n          courses: courses,\n          addExam: addExam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:examId\",\n        element: /*#__PURE__*/_jsxDEV(ExamForm, {\n          addExam: updateExam,\n          courses: courses,\n          exams: exams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App2, \"Wo+f1lqIO6+9wNhaWzMck60x38s=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = App2;\n\nfunction Loading(props) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading data ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Loading;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"App2\");\n$RefreshReg$(_c3, \"Loading\");","map":{"version":3,"sources":["/home/gaetano/Desktop/Projects/Web_Application/weeks/week13/client/src/App.js"],"names":["Container","Row","Col","Alert","ExamScores","ExamForm","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","useEffect","useState","API","App","App2","exams","setExams","courses","setCourses","dirty","setDirty","initialLoading","setInitialLoading","navigate","getAllCourses","then","catch","err","handleError","length","getAllExams","console","log","deleteExam","code","map","e","status","addExam","exam","oldExams","updateExam","Object","assign","Loading","props"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import dayjs from 'dayjs';\nimport { ExamScores } from './ExamScores';\nimport ExamForm from './ExamForm';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport API from './API';\n\n/*\nconst fakeExams = [\n  { code: '01TYMOV', name: 'Information systems security', score: 30, date: dayjs('2022-02-01') },\n  { code: '01SQJOV', name: 'Data Science and Database Technology', score: 21, date: dayjs('2021-06-15') },\n  { code: '04GSPOV', name: 'Software Engineering', score: 26, date: dayjs('2022-06-04') }\n];\n*/\n\nfunction App() {\n  return (\n    <Router>\n      <App2 />\n    </Router>\n  )\n}\n\nfunction App2() {\n  const [exams, setExams] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [dirty, setDirty] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n      API.getAllCourses()\n        .then( (courses) => { setCourses(courses); setDirty(true); } )\n        .catch( err => handleError(err))\n  }, [])\n\n  useEffect(() => {\n    // fetch  /api/exams\n    // setExams del risultato\n    if (courses.length && dirty) {\n      API.getAllExams()\n        .then((exams) => {\n          setExams(exams);\n          setDirty(false);\n          setInitialLoading(false);\n        })\n        .catch(err => console.log(err))\n    }\n  }, [courses.length, dirty])\n\n  function handleError(err) {\n    console.log(err);\n  }\n\n  function deleteExam(code) {\n    // setExams(...)   // remove exam\n    //setExams( exams.filter( (e)=> e.code !== code ) );\n    setExams( exams => exams.map( e => (e.code === code) ? {...e, status: 'deleted'} : e ))\n    API.deleteExam(code)\n      .then( ()=> setDirty(true))\n      .catch( err => handleError(err));\n  }\n\n  function addExam(exam) {\n    exam.status = 'added';\n    setExams( oldExams => [...oldExams, exam] );\n    API.addExam(exam)\n      .then( () => setDirty(true) )\n      .catch( err => handleError(err));\n  }\n\n  function updateExam(exam) {\n    setExams(exams => exams.map(\n      e => (e.code === exam.code) ? Object.assign({}, exam, {status: 'updated'}) : e\n    ));\n    API.updateExam(exam)\n      .then( () => setDirty(true) )\n      .catch( err => handleError(err) );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row><Col>\n        </Col></Row>\n        <Row><Col>\n        </Col></Row>\n      </Container>\n      <Routes>\n        <Route path='/' element={\n            initialLoading ? <Loading /> :\n              <ExamScores exams={exams} deleteExam={deleteExam} />\n          } />\n        <Route path='/add' element={<ExamForm exams={exams} courses={courses} addExam={addExam} />} />\n        <Route path='/edit/:examId' element={<ExamForm addExam={updateExam} courses={courses}  exams={exams} />} />\n      </Routes>\n    </>\n  );\n}\n\nfunction Loading(props) {\n  return (\n    <h2>Loading data ...</h2>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}